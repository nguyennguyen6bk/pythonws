{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Untitled","provenance":[],"authorship_tag":"ABX9TyMD2zIT0jnMoFSM+hVebf1y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"xtXRRj1c7i24","executionInfo":{"status":"ok","timestamp":1654669098011,"user_tz":-420,"elapsed":896,"user":{"displayName":"Nguyen Nguyen","userId":"06081248861065786860"}},"outputId":"6d0d2d46-c435-4613-8cf8-059cd9376dee"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["-1.784320913736719e+34\n","-5.4600956095177726e+32\n"]}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","dataFrame = pd.read_csv(\"https://raw.githubusercontent.com/justmarkham/scikit-learn-videos/master/data/Advertising.csv\")\n","X = dataFrame.values[:, 2]\n","Y = dataFrame.values[:, 4]\n","\n","plt.scatter(X, Y, marker='o')\n","plt.show()\n","\n","def predict(newRadio, w, b):\n","    return w*newRadio + b\n","\n","def costFunction(X, Y, w, b):\n","    n = len(X)\n","    sumError = 0\n","    for i in range(n):\n","        sumError += (Y[i] - (w*X[i] + b))**2\n","    return sumError/n\n","\n","def update_weight(X, Y, w, b, lr):\n","    n = len(X)\n","    w_temp = 0.0\n","    b_temp = 0.0\n","    for i in range(n):\n","        w_temp += -2 * X[i] * (Y[i] - (w * X[i] + b))\n","        b_temp += -2 * (Y[i] - (w*X[i] + b))\n","    w -= lr*(w_temp/n)\n","    b -= lr*(b_temp/n)\n","    return w, b\n","\n","def train(X, Y, w, b, lr, itr):\n","    cos_his = []\n","    for i in range(itr):\n","        w, b = update_weight(X, Y, w, b, lr)\n","        cost = costFunction(X, Y, w, b)\n","        cos_his.append(cost)\n","\n","    return w, b\n","\n","w, b = train(X, Y, 0.03, 0.0014, 0.01, 30)\n","print(w)\n","print(b)"]}]}